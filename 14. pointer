1. 포인터 

    포인터는 메모리 주소를 값으로 갖는 타입 

    var a int
    var p *int

    // a의 주소값
    p = &a

    // a주소에 20을 assign
    *p = 20 

2.여러 포인터 변수가 하나의 변수를 가리킬 수 있다.

3. 포인터 변수의 기본 값은 nil
    var p *int
    ip p!= nil {
        // p가 nil이 아니라는 이야기는 p가 유효한 메모리 주소를 가리킨다는 뜻입니다. 
    }

4. 포인터를 사용하는 이유 
    주소값만 복사하면 성능이 좋아진다 

5. 구조체 포인터 초기화 
    var data data
    var p *Data = &data

    var p *Data = &Data{}

6. 인스턴스 
    인스턴스(Instance)는 메모리에 할당된 데이터의 실체 

    var p *Data = &Data{} 
                인스턴스 


7. new() 내장 함수 

    p1 := &Data{}   // &를 사용하는 초기화
    var p2 = new(Data)  // new()를 사용하는 초기화 -> 기본 값으로만 초기화가 가능 

8. 인스턴스는 언제 사라지나 ?

    func Testfunc() {
        u := &User{}    // u 포인터 변수를 선언하고 인스턴스를 생성합니다. 
        u.Age = 30
        fmt.Println(u)
    }       // 내부 변수 u는 사라집니다. 더불어 인스턴스도 사라집니다. (포인터가 끊기고 gc 때 사라진다 )